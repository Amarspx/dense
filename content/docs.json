{
    "classes": [
        {
            "name": "jQuery",
            "description": "",
            "extends": [
            ],
            "access": "",
            "virtual": false,
            "fires": "",
            "constructor": {
                "name": "jQuery",
                "description": "",
                "parameters": [
                ],
                "examples": [
                ]
            },
            "classes": [
                {
                    "name": "fn",
                    "description": "",
                    "extends": [
                    ],
                    "access": "",
                    "virtual": false,
                    "fires": "",
                    "constructor": {
                        "name": "fn",
                        "description": "",
                        "parameters": [
                        ],
                        "examples": [
                        ]
                    },
                    "classes": [
                        {
                            "name": "dense",
                            "description": "",
                            "extends": [
                            ],
                            "access": "",
                            "virtual": false,
                            "fires": "",
                            "constructor": {
                                "name": "dense",
                                "description": "Dense offers few methods and options that can be used to both customize the\nplugin's functionality and return resulting values. All interaction is done through\nthe <code>$.fn.dense()</code> method, that accepts a called method and its options\nobject as its arguments. Both arguments are optional, and either one can be omitted.",
                                "parameters": [
                                    {
                                        "name": "method",
                                        "type": "String",
                                        "description": "The called method",
                                        "default": "init",
                                        "optional": true,
                                        "nullable": ""
                                    },
                                    {
                                        "name": "options",
                                        "type": "Object",
                                        "description": "Options passed to the method",
                                        "default": "{}",
                                        "optional": true,
                                        "nullable": ""
                                    }
                                ],
                                "examples": [
                                ]
                            },
                            "functions": [
                                {
                                    "name": "init",
                                    "access": "",
                                    "virtual": false,
                                    "description": "Renders a pixel-ratio-aware image.\n\nDense defaults to the init method if no\nmethod is specified.\n\nThe method should be used to select the images that\nshould display retina-size images on high pixel ratio\ndevices.\n\nThe correct image variation is selected based on the\ndevice's pixel ratio. If the image element defines\ndata-{ratio}x (e.g. data-1x, data-2x, data-3x) attributes,\nthe most appropriate of those is selected.\n\nIf no data-ratio attributes are defined, the retina image is\nconstructed from the specified <code>src</code> attribute.\nThe searched high pixel ratio images follow\na <code>{imageName}_{ratio}x.{ext}</code> naming convention.\nFor an image found in /path/to/images/image.jpg, the 2x retina\nimage would be looked from /path/to/images/image_2x.jpg.\n\nWhen image is constructed from the src, the image existance is\nverified using HTTP HEAD request. The check makes sure no\nHTTP error code is returned, and that the received content-type\nis either <code>image/jpg</code>, <code>image/png</code>,\n<code>image/gif</code> or <code>image/bmp</code>. Vector image\nformats, like svg, are skipped.\n\nThis method can also be used to load image in semi-lazy fashion.\nIf the selector targets a element that isn't an image, an\nimage is appended to that location. The image is constructed\nusing the specified <code>data-{ratio}x</code> attributes like\nwith normal images.",
                                    "parameters": [
                                        {
                                            "name": "options",
                                            "type": "Object",
                                            "description": "Options",
                                            "default": "{}",
                                            "optional": true,
                                            "nullable": ""
                                        },
                                        {
                                            "name": "options.ping",
                                            "type": "Boolean",
                                            "description": "A prefix added to the generated links",
                                            "default": "true",
                                            "optional": true,
                                            "nullable": ""
                                        },
                                        {
                                            "name": "options.dimensions",
                                            "type": "String",
                                            "description": "What to do with the <code>width</code> and <code>height</code> attributes. Either <code>update</code>, <code>remove</code> or <code>preserve</code>",
                                            "default": "preserve",
                                            "optional": true,
                                            "nullable": ""
                                        }
                                    ],
                                    "examples": [
                                        "$('img.retina').dense({\n 'ping'      : false,\n 'dimension' : true\n});"
                                    ],
                                    "returns": {
                                        "type": "Object",
                                        "description": "this"
                                    }
                                },
                                {
                                    "name": "updateDimensions",
                                    "access": "",
                                    "virtual": false,
                                    "description": "Sets an image's width and height attributes to its native values.\n\nUpdates an img element's dimensions to the source image's\nreal values.\n\nThis method is asynchronous, so you can not directly return\nits values. Instead use load event.",
                                    "parameters": [
                                    ],
                                    "examples": [
                                        "var image = $('img').dense('updateDimensions');"
                                    ],
                                    "returns": {
                                        "type": "Object",
                                        "description": "this"
                                    }
                                },
                                {
                                    "name": "devicePixelRatio",
                                    "access": "",
                                    "virtual": false,
                                    "description": "Gets device pixel ratio rounded up to the closest integer.",
                                    "parameters": [
                                    ],
                                    "examples": [
                                        "var ratio = $(window).dense('devicePixelRatio');\nalert(ratio);"
                                    ],
                                    "returns": {
                                        "type": "Integer",
                                        "description": "The pixel ratio"
                                    }
                                },
                                {
                                    "name": "getImageAttribute",
                                    "access": "",
                                    "virtual": false,
                                    "description": "Gets an appropriate URL for the pixel ratio from the data attribute list.\n\nSelects the most appropriate <code>data-{ratio}x</code> attribute from\nthe given element's attributes.\n\nIf the devices pixel ratio is greater than the largest specified image,\nthe largest one of the available is used.",
                                    "parameters": [
                                    ],
                                    "examples": [
                                        "var image = $('<div data-1x=\"image.jpg\" data-2x=\"image_2x.jpg\" />').dense('getImageAttribute');\n$('body').css('background-image', 'url(' + image + ')');"
                                    ],
                                    "returns": {
                                        "type": [
                                            "String",
                                            "Boolean"
                                        ],
                                        "description": "The attribute value"
                                    }
                                }
                            ]
                        }
                    ]
                }
            ]
        }
    ]
}
