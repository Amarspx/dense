{
    "classes": [
        {
            "name": "jQuery",
            "description": "",
            "extends": [
            ],
            "access": "",
            "virtual": false,
            "fires": "",
            "constructor": {
                "name": "jQuery",
                "description": "",
                "parameters": [
                ],
                "examples": [
                ]
            },
            "classes": [
                {
                    "name": "fn",
                    "description": "",
                    "extends": [
                    ],
                    "access": "",
                    "virtual": false,
                    "fires": "",
                    "constructor": {
                        "name": "fn",
                        "description": "",
                        "parameters": [
                        ],
                        "examples": [
                        ]
                    },
                    "classes": [
                        {
                            "name": "dense",
                            "description": "",
                            "extends": [
                            ],
                            "access": "",
                            "virtual": false,
                            "fires": "",
                            "constructor": {
                                "name": "dense",
                                "description": "Dense offers few methods and options that can be used to both customize the\nplugin's functionality and return resulting values. All interaction is done through\nthe <code>$.fn.dense()</code> method, that accepts a called method and its options\nobject as its arguments. Both arguments are optional, and either one can be omitted.",
                                "parameters": [
                                    {
                                        "name": "method",
                                        "type": "String",
                                        "description": "The called method",
                                        "default": "init",
                                        "optional": true,
                                        "nullable": ""
                                    },
                                    {
                                        "name": "options",
                                        "type": "Object",
                                        "description": "Options passed to the method",
                                        "default": "{}",
                                        "optional": true,
                                        "nullable": ""
                                    }
                                ],
                                "examples": [
                                ]
                            },
                            "functions": [
                                {
                                    "name": "init",
                                    "access": "",
                                    "virtual": false,
                                    "description": "Init is the default method responsible for rendering \na pixel-ratio-aware images.\n\nThis method is used to select the images that\nshould display retina-size images on high pixel ratio\ndevices. Dense defaults to the init method if no\nmethod is specified.\n\nWhen attached to an image, the correct image variation is\nselected based on the device's pixel ratio. If the image element\ndefines <code>data-{ratio}x</code> attributes (e.g. data-1x, data-2x, data-3x),\nthe most appropriate of those is selected.\n\nIf no data-ratio attributes are defined, the retina image is\nconstructed from the <code>src</code> attribute.\nThe searched high pixel ratio images follows\na <code>{imageName}_{ratio}x.{ext}</code> naming convention.\nFor an image found in /path/to/images/image.jpg, the 2x retina\nimage would be looked from /path/to/images/image_2x.jpg.\n\nWhen image is constructed from the src, the image existance is\nverified using HTTP HEAD request, if <code>ping</code> option is\n<code>true</code>. The check makes sure no HTTP error code is returned,\nand that the received content-type is of an image. Vector image formats,\nlike svg, are skipped based on the file extension.\n\nThis method can also be used to load image in semi-lazy fashion,\nand avoid larger extra HTTP requests due to retina replacements.\nThe data-1x attribute can be used to supstitute the src, making\nsure the browser doesn't try to download the normal image variation\nbefore the JavaScript driven behaviour kicks in.",
                                    "parameters": [
                                        {
                                            "name": "options",
                                            "type": "Object",
                                            "description": "Options",
                                            "default": "{}",
                                            "optional": true,
                                            "nullable": ""
                                        },
                                        {
                                            "name": "options.ping",
                                            "type": "Boolean",
                                            "description": "Check that the retina image exists before applying",
                                            "default": "true",
                                            "optional": true,
                                            "nullable": ""
                                        },
                                        {
                                            "name": "options.dimensions",
                                            "type": "String",
                                            "description": "What to do with the image's <code>width</code> and <code>height</code> attributes. Either <code>update</code>, <code>remove</code> or <code>preserve</code>",
                                            "default": "preserve",
                                            "optional": true,
                                            "nullable": ""
                                        },
                                        {
                                            "name": "options.glue",
                                            "type": "String",
                                            "description": "String that glues the retina \"nx\" suffix to the image. This option can be used to change the naming convention between the two commonly used practices, <code>image@2x.jpg</code> and <code>image_2x.jpg</code>",
                                            "default": "_",
                                            "optional": true,
                                            "nullable": ""
                                        }
                                    ],
                                    "examples": [
                                        "$('img').dense({\n 'ping'      : false,\n 'dimension' : 'update'\n});"
                                    ],
                                    "returns": {
                                        "type": "Object",
                                        "description": "this"
                                    }
                                },
                                {
                                    "name": "updateDimensions",
                                    "access": "",
                                    "virtual": false,
                                    "description": "Sets an image's width and height attributes to its native values.\n\nUpdates an img element's dimensions to the source image's\nreal values. This method is asynchronous, so you can not directly\nreturn its values. Instead, use the 'dense-dimensions-updated'\nevent to detect when the action is done.",
                                    "parameters": [
                                    ],
                                    "examples": [
                                        "var image = $('img').dense('updateDimensions');"
                                    ],
                                    "returns": {
                                        "type": "Object",
                                        "description": "this"
                                    }
                                },
                                {
                                    "name": "devicePixelRatio",
                                    "access": "",
                                    "virtual": false,
                                    "description": "Gets device pixel ratio rounded up to the closest integer.",
                                    "parameters": [
                                    ],
                                    "examples": [
                                        "var ratio = $(window).dense('devicePixelRatio');\nalert(ratio);"
                                    ],
                                    "returns": {
                                        "type": "Integer",
                                        "description": "The pixel ratio"
                                    }
                                },
                                {
                                    "name": "getImageAttribute",
                                    "access": "",
                                    "virtual": false,
                                    "description": "Gets an appropriate URL for the pixel ratio from the data attribute list.\n\nSelects the most appropriate <code>data-{ratio}x</code> attribute from\nthe given element's attributes. If the devices pixel ratio is greater\nthan the largest specified image, the largest one of the available is used.",
                                    "parameters": [
                                    ],
                                    "examples": [
                                        "var image = $('<div data-1x=\"image.jpg\" data-2x=\"image_2x.jpg\" />').dense('getImageAttribute');\n$('body').css('background-image', 'url(' + image + ')');"
                                    ],
                                    "returns": {
                                        "type": [
                                            "String",
                                            "Boolean"
                                        ],
                                        "description": "The attribute value"
                                    }
                                }
                            ],
                            "events": [
                                {
                                    "name": "dense-retina-loaded",
                                    "access": "",
                                    "virtual": false,
                                    "description": "This event is invoked when an retina image has finished loading.",
                                    "parameters": [
                                    ],
                                    "examples": [
                                    ]
                                },
                                {
                                    "name": "dense-dimensions-updated",
                                    "access": "",
                                    "virtual": false,
                                    "description": "This event is invoked when an image's dimensions are\nhave been updated by the <code>updateDimensions</code>\nmethod.",
                                    "parameters": [
                                    ],
                                    "examples": [
                                    ]
                                }
                            ]
                        }
                    ]
                }
            ]
        }
    ]
}
